@inject AuthenticationStateProvider AuthProvider


<nav class="navbar">
    <ul class="nav-list">
        <li><NavLink href="/" Match="NavLinkMatch.All">Startseite</NavLink></li>
        <li><NavLink href="/beats">Beats</NavLink></li>
        <li><NavLink href="/cart">Warenkorb</NavLink></li>

        @if(isAdmin)
        {
            <li><NavLink href="/dashboard">Übersicht</NavLink></li>
            <li><NavLink href="/orders">Bestellungen</NavLink></li>
            <li><NavLink href="/upload">Hochladen</NavLink></li>
        }

        @if (isLoggedIn)
        {
            <li><NavLink href="/logout">Abmelden</NavLink></li>
        }
        else
        {
            <li><NavLink href="/login">Anmelden</NavLink></li>
        }
    </ul>
</nav>

@code {
    private bool isAdmin = false;
    private bool isLoggedIn = false;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        isLoggedIn = user.Identity?.IsAuthenticated ?? false;
        isAdmin = user.IsInRole("Admin");
    }
}